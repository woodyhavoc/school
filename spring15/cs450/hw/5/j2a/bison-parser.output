Terminals unused in grammar

   TOK_IF_ELSE
   TOK_ERROR
   TOK_BLOCK
   TOK_DECLS
   TOK_DECL
   TOK_TYPE
   TOK_TYPE1
   TOK_BASIC
   TOK_STMT
   TOK_LOC
   TOK_LOC1
   TOK_BOOL
   TOK_BOOL1
   TOK_JOIN
   TOK_JOIN1
   TOK_EQUALITY
   TOK_EQUALITY1
   TOK_REL
   TOK_EXPR
   TOK_EXPR1
   TOK_TERM
   TOK_TERM1
   TOK_UNARY
   TOK_FACTOR


State 102 conflicts: 1 shift/reduce


Grammar

    0 $accept: prog $end

    1 prog: block

    2 block: '{' decls stmts '}'

    3 decls: decl decls
    4      | /* empty */

    5 decl: type TOK_ID ';'

    6 type: basic type1

    7 type1: '[' TOK_NUM ']' type1
    8      | /* empty */

    9 basic: "int"
   10      | "float"

   11 stmts: stmt stmts
   12      | /* empty */

   13 stmt: loc "==" bool ';'
   14     | "if" '(' bool ')' stmt
   15     | "if" '(' bool ')' stmt "else" stmt
   16     | "while" '(' bool ')' stmt
   17     | "do" stmt "while" '(' bool ')' ';'
   18     | "break" ';'
   19     | block
   20     | "read" loc ';'
   21     | "write" bool ';'

   22 loc: TOK_ID loc1

   23 loc1: '[' bool ']' loc1
   24     | /* empty */

   25 bool: join bool1

   26 bool1: "||" join bool1
   27      | /* empty */

   28 join: equality join1

   29 join1: "&&" equality join1
   30      | /* empty */

   31 equality: rel equality1

   32 equality1: "==" rel equality1
   33          | "!=" rel equality1
   34          | /* empty */

   35 rel: expr '<' expr
   36    | expr "<=" expr
   37    | expr ">=" expr
   38    | expr '>' expr
   39    | expr

   40 expr: term expr1

   41 expr1: '+' term expr1
   42      | '-' term expr1
   43      | /* empty */

   44 term: unary term1

   45 term1: '*' unary term1
   46      | '/' unary term1
   47      | /* empty */

   48 unary: '!' unary
   49      | '-' unary
   50      | factor

   51 factor: '(' bool ')'
   52       | loc
   53       | TOK_NUM
   54       | TOK_REAL
   55       | "true"
   56       | "false"


Terminals, with rules where they appear

$end (0) 0
'!' (33) 48
'(' (40) 14 15 16 17 51
')' (41) 14 15 16 17 51
'*' (42) 45
'+' (43) 41
'-' (45) 42 49
'/' (47) 46
';' (59) 5 13 17 18 20 21
'<' (60) 35
'>' (62) 38
'[' (91) 7 23
']' (93) 7 23
'{' (123) 2
'}' (125) 2
error (256)
"break" (258) 18
"while" (259) 16 17
"&&" (260) 29
"<=" (261) 36
"||" (262) 26
"if" (263) 14 15
"else" (264) 15
"do" (265) 17
"read" (266) 20
"write" (267) 21
"==" (268) 13 32
"!=" (269) 33
">=" (270) 37
"int" (271) 9
"float" (272) 10
"true" (273) 55
"false" (274) 56
TOK_IF_ELSE (275)
TOK_ERROR (276)
TOK_ID (277) 5 22
TOK_NUM (278) 7 53
TOK_REAL (279) 54
TOK_BLOCK (280)
TOK_DECLS (281)
TOK_DECL (282)
TOK_TYPE (283)
TOK_TYPE1 (284)
TOK_BASIC (285)
TOK_STMT (286)
TOK_LOC (287)
TOK_LOC1 (288)
TOK_BOOL (289)
TOK_BOOL1 (290)
TOK_JOIN (291)
TOK_JOIN1 (292)
TOK_EQUALITY (293)
TOK_EQUALITY1 (294)
TOK_REL (295)
TOK_EXPR (296)
TOK_EXPR1 (297)
TOK_TERM (298)
TOK_TERM1 (299)
TOK_UNARY (300)
TOK_FACTOR (301)


Nonterminals, with rules where they appear

$accept (61)
    on left: 0
prog (62)
    on left: 1, on right: 0
block (63)
    on left: 2, on right: 1 19
decls (64)
    on left: 3 4, on right: 2 3
decl (65)
    on left: 5, on right: 3
type (66)
    on left: 6, on right: 5
type1 (67)
    on left: 7 8, on right: 6 7
basic (68)
    on left: 9 10, on right: 6
stmts (69)
    on left: 11 12, on right: 2 11
stmt (70)
    on left: 13 14 15 16 17 18 19 20 21, on right: 11 14 15 16 17
loc (71)
    on left: 22, on right: 13 20 52
loc1 (72)
    on left: 23 24, on right: 22 23
bool (73)
    on left: 25, on right: 13 14 15 16 17 21 23 51
bool1 (74)
    on left: 26 27, on right: 25 26
join (75)
    on left: 28, on right: 25 26
join1 (76)
    on left: 29 30, on right: 28 29
equality (77)
    on left: 31, on right: 28 29
equality1 (78)
    on left: 32 33 34, on right: 31 32 33
rel (79)
    on left: 35 36 37 38 39, on right: 31 32 33
expr (80)
    on left: 40, on right: 35 36 37 38 39
expr1 (81)
    on left: 41 42 43, on right: 40 41 42
term (82)
    on left: 44, on right: 40 41 42
term1 (83)
    on left: 45 46 47, on right: 44 45 46
unary (84)
    on left: 48 49 50, on right: 44 45 46 48 49
factor (85)
    on left: 51 52 53 54 55 56, on right: 50


State 0

    0 $accept: . prog $end

    '{'  shift, and go to state 1

    prog   go to state 2
    block  go to state 3


State 1

    2 block: '{' . decls stmts '}'

    "int"    shift, and go to state 4
    "float"  shift, and go to state 5

    $default  reduce using rule 4 (decls)

    decls  go to state 6
    decl   go to state 7
    type   go to state 8
    basic  go to state 9


State 2

    0 $accept: prog . $end

    $end  shift, and go to state 10


State 3

    1 prog: block .

    $default  reduce using rule 1 (prog)


State 4

    9 basic: "int" .

    $default  reduce using rule 9 (basic)


State 5

   10 basic: "float" .

    $default  reduce using rule 10 (basic)


State 6

    2 block: '{' decls . stmts '}'

    "break"  shift, and go to state 11
    "while"  shift, and go to state 12
    "if"     shift, and go to state 13
    "do"     shift, and go to state 14
    "read"   shift, and go to state 15
    "write"  shift, and go to state 16
    TOK_ID   shift, and go to state 17
    '{'      shift, and go to state 1

    $default  reduce using rule 12 (stmts)

    block  go to state 18
    stmts  go to state 19
    stmt   go to state 20
    loc    go to state 21


State 7

    3 decls: decl . decls

    "int"    shift, and go to state 4
    "float"  shift, and go to state 5

    $default  reduce using rule 4 (decls)

    decls  go to state 22
    decl   go to state 7
    type   go to state 8
    basic  go to state 9


State 8

    5 decl: type . TOK_ID ';'

    TOK_ID  shift, and go to state 23


State 9

    6 type: basic . type1

    '['  shift, and go to state 24

    $default  reduce using rule 8 (type1)

    type1  go to state 25


State 10

    0 $accept: prog $end .

    $default  accept


State 11

   18 stmt: "break" . ';'

    ';'  shift, and go to state 26


State 12

   16 stmt: "while" . '(' bool ')' stmt

    '('  shift, and go to state 27


State 13

   14 stmt: "if" . '(' bool ')' stmt
   15     | "if" . '(' bool ')' stmt "else" stmt

    '('  shift, and go to state 28


State 14

   17 stmt: "do" . stmt "while" '(' bool ')' ';'

    "break"  shift, and go to state 11
    "while"  shift, and go to state 12
    "if"     shift, and go to state 13
    "do"     shift, and go to state 14
    "read"   shift, and go to state 15
    "write"  shift, and go to state 16
    TOK_ID   shift, and go to state 17
    '{'      shift, and go to state 1

    block  go to state 18
    stmt   go to state 29
    loc    go to state 21


State 15

   20 stmt: "read" . loc ';'

    TOK_ID  shift, and go to state 17

    loc  go to state 30


State 16

   21 stmt: "write" . bool ';'

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc       go to state 38
    bool      go to state 39
    join      go to state 40
    equality  go to state 41
    rel       go to state 42
    expr      go to state 43
    term      go to state 44
    unary     go to state 45
    factor    go to state 46


State 17

   22 loc: TOK_ID . loc1

    '['  shift, and go to state 47

    $default  reduce using rule 24 (loc1)

    loc1  go to state 48


State 18

   19 stmt: block .

    $default  reduce using rule 19 (stmt)


State 19

    2 block: '{' decls stmts . '}'

    '}'  shift, and go to state 49


State 20

   11 stmts: stmt . stmts

    "break"  shift, and go to state 11
    "while"  shift, and go to state 12
    "if"     shift, and go to state 13
    "do"     shift, and go to state 14
    "read"   shift, and go to state 15
    "write"  shift, and go to state 16
    TOK_ID   shift, and go to state 17
    '{'      shift, and go to state 1

    $default  reduce using rule 12 (stmts)

    block  go to state 18
    stmts  go to state 50
    stmt   go to state 20
    loc    go to state 21


State 21

   13 stmt: loc . "==" bool ';'

    "=="  shift, and go to state 51


State 22

    3 decls: decl decls .

    $default  reduce using rule 3 (decls)


State 23

    5 decl: type TOK_ID . ';'

    ';'  shift, and go to state 52


State 24

    7 type1: '[' . TOK_NUM ']' type1

    TOK_NUM  shift, and go to state 53


State 25

    6 type: basic type1 .

    $default  reduce using rule 6 (type)


State 26

   18 stmt: "break" ';' .

    $default  reduce using rule 18 (stmt)


State 27

   16 stmt: "while" '(' . bool ')' stmt

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc       go to state 38
    bool      go to state 54
    join      go to state 40
    equality  go to state 41
    rel       go to state 42
    expr      go to state 43
    term      go to state 44
    unary     go to state 45
    factor    go to state 46


State 28

   14 stmt: "if" '(' . bool ')' stmt
   15     | "if" '(' . bool ')' stmt "else" stmt

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc       go to state 38
    bool      go to state 55
    join      go to state 40
    equality  go to state 41
    rel       go to state 42
    expr      go to state 43
    term      go to state 44
    unary     go to state 45
    factor    go to state 46


State 29

   17 stmt: "do" stmt . "while" '(' bool ')' ';'

    "while"  shift, and go to state 56


State 30

   20 stmt: "read" loc . ';'

    ';'  shift, and go to state 57


State 31

   55 factor: "true" .

    $default  reduce using rule 55 (factor)


State 32

   56 factor: "false" .

    $default  reduce using rule 56 (factor)


State 33

   53 factor: TOK_NUM .

    $default  reduce using rule 53 (factor)


State 34

   54 factor: TOK_REAL .

    $default  reduce using rule 54 (factor)


State 35

   51 factor: '(' . bool ')'

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc       go to state 38
    bool      go to state 58
    join      go to state 40
    equality  go to state 41
    rel       go to state 42
    expr      go to state 43
    term      go to state 44
    unary     go to state 45
    factor    go to state 46


State 36

   49 unary: '-' . unary

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc     go to state 38
    unary   go to state 59
    factor  go to state 46


State 37

   48 unary: '!' . unary

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc     go to state 38
    unary   go to state 60
    factor  go to state 46


State 38

   52 factor: loc .

    $default  reduce using rule 52 (factor)


State 39

   21 stmt: "write" bool . ';'

    ';'  shift, and go to state 61


State 40

   25 bool: join . bool1

    "||"  shift, and go to state 62

    $default  reduce using rule 27 (bool1)

    bool1  go to state 63


State 41

   28 join: equality . join1

    "&&"  shift, and go to state 64

    $default  reduce using rule 30 (join1)

    join1  go to state 65


State 42

   31 equality: rel . equality1

    "=="  shift, and go to state 66
    "!="  shift, and go to state 67

    $default  reduce using rule 34 (equality1)

    equality1  go to state 68


State 43

   35 rel: expr . '<' expr
   36    | expr . "<=" expr
   37    | expr . ">=" expr
   38    | expr . '>' expr
   39    | expr .

    "<="  shift, and go to state 69
    ">="  shift, and go to state 70
    '<'   shift, and go to state 71
    '>'   shift, and go to state 72

    $default  reduce using rule 39 (rel)


State 44

   40 expr: term . expr1

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74

    $default  reduce using rule 43 (expr1)

    expr1  go to state 75


State 45

   44 term: unary . term1

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    $default  reduce using rule 47 (term1)

    term1  go to state 78


State 46

   50 unary: factor .

    $default  reduce using rule 50 (unary)


State 47

   23 loc1: '[' . bool ']' loc1

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc       go to state 38
    bool      go to state 79
    join      go to state 40
    equality  go to state 41
    rel       go to state 42
    expr      go to state 43
    term      go to state 44
    unary     go to state 45
    factor    go to state 46


State 48

   22 loc: TOK_ID loc1 .

    $default  reduce using rule 22 (loc)


State 49

    2 block: '{' decls stmts '}' .

    $default  reduce using rule 2 (block)


State 50

   11 stmts: stmt stmts .

    $default  reduce using rule 11 (stmts)


State 51

   13 stmt: loc "==" . bool ';'

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc       go to state 38
    bool      go to state 80
    join      go to state 40
    equality  go to state 41
    rel       go to state 42
    expr      go to state 43
    term      go to state 44
    unary     go to state 45
    factor    go to state 46


State 52

    5 decl: type TOK_ID ';' .

    $default  reduce using rule 5 (decl)


State 53

    7 type1: '[' TOK_NUM . ']' type1

    ']'  shift, and go to state 81


State 54

   16 stmt: "while" '(' bool . ')' stmt

    ')'  shift, and go to state 82


State 55

   14 stmt: "if" '(' bool . ')' stmt
   15     | "if" '(' bool . ')' stmt "else" stmt

    ')'  shift, and go to state 83


State 56

   17 stmt: "do" stmt "while" . '(' bool ')' ';'

    '('  shift, and go to state 84


State 57

   20 stmt: "read" loc ';' .

    $default  reduce using rule 20 (stmt)


State 58

   51 factor: '(' bool . ')'

    ')'  shift, and go to state 85


State 59

   49 unary: '-' unary .

    $default  reduce using rule 49 (unary)


State 60

   48 unary: '!' unary .

    $default  reduce using rule 48 (unary)


State 61

   21 stmt: "write" bool ';' .

    $default  reduce using rule 21 (stmt)


State 62

   26 bool1: "||" . join bool1

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc       go to state 38
    join      go to state 86
    equality  go to state 41
    rel       go to state 42
    expr      go to state 43
    term      go to state 44
    unary     go to state 45
    factor    go to state 46


State 63

   25 bool: join bool1 .

    $default  reduce using rule 25 (bool)


State 64

   29 join1: "&&" . equality join1

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc       go to state 38
    equality  go to state 87
    rel       go to state 42
    expr      go to state 43
    term      go to state 44
    unary     go to state 45
    factor    go to state 46


State 65

   28 join: equality join1 .

    $default  reduce using rule 28 (join)


State 66

   32 equality1: "==" . rel equality1

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc     go to state 38
    rel     go to state 88
    expr    go to state 43
    term    go to state 44
    unary   go to state 45
    factor  go to state 46


State 67

   33 equality1: "!=" . rel equality1

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc     go to state 38
    rel     go to state 89
    expr    go to state 43
    term    go to state 44
    unary   go to state 45
    factor  go to state 46


State 68

   31 equality: rel equality1 .

    $default  reduce using rule 31 (equality)


State 69

   36 rel: expr "<=" . expr

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc     go to state 38
    expr    go to state 90
    term    go to state 44
    unary   go to state 45
    factor  go to state 46


State 70

   37 rel: expr ">=" . expr

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc     go to state 38
    expr    go to state 91
    term    go to state 44
    unary   go to state 45
    factor  go to state 46


State 71

   35 rel: expr '<' . expr

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc     go to state 38
    expr    go to state 92
    term    go to state 44
    unary   go to state 45
    factor  go to state 46


State 72

   38 rel: expr '>' . expr

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc     go to state 38
    expr    go to state 93
    term    go to state 44
    unary   go to state 45
    factor  go to state 46


State 73

   41 expr1: '+' . term expr1

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc     go to state 38
    term    go to state 94
    unary   go to state 45
    factor  go to state 46


State 74

   42 expr1: '-' . term expr1

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc     go to state 38
    term    go to state 95
    unary   go to state 45
    factor  go to state 46


State 75

   40 expr: term expr1 .

    $default  reduce using rule 40 (expr)


State 76

   45 term1: '*' . unary term1

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc     go to state 38
    unary   go to state 96
    factor  go to state 46


State 77

   46 term1: '/' . unary term1

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc     go to state 38
    unary   go to state 97
    factor  go to state 46


State 78

   44 term: unary term1 .

    $default  reduce using rule 44 (term)


State 79

   23 loc1: '[' bool . ']' loc1

    ']'  shift, and go to state 98


State 80

   13 stmt: loc "==" bool . ';'

    ';'  shift, and go to state 99


State 81

    7 type1: '[' TOK_NUM ']' . type1

    '['  shift, and go to state 24

    $default  reduce using rule 8 (type1)

    type1  go to state 100


State 82

   16 stmt: "while" '(' bool ')' . stmt

    "break"  shift, and go to state 11
    "while"  shift, and go to state 12
    "if"     shift, and go to state 13
    "do"     shift, and go to state 14
    "read"   shift, and go to state 15
    "write"  shift, and go to state 16
    TOK_ID   shift, and go to state 17
    '{'      shift, and go to state 1

    block  go to state 18
    stmt   go to state 101
    loc    go to state 21


State 83

   14 stmt: "if" '(' bool ')' . stmt
   15     | "if" '(' bool ')' . stmt "else" stmt

    "break"  shift, and go to state 11
    "while"  shift, and go to state 12
    "if"     shift, and go to state 13
    "do"     shift, and go to state 14
    "read"   shift, and go to state 15
    "write"  shift, and go to state 16
    TOK_ID   shift, and go to state 17
    '{'      shift, and go to state 1

    block  go to state 18
    stmt   go to state 102
    loc    go to state 21


State 84

   17 stmt: "do" stmt "while" '(' . bool ')' ';'

    "true"    shift, and go to state 31
    "false"   shift, and go to state 32
    TOK_ID    shift, and go to state 17
    TOK_NUM   shift, and go to state 33
    TOK_REAL  shift, and go to state 34
    '('       shift, and go to state 35
    '-'       shift, and go to state 36
    '!'       shift, and go to state 37

    loc       go to state 38
    bool      go to state 103
    join      go to state 40
    equality  go to state 41
    rel       go to state 42
    expr      go to state 43
    term      go to state 44
    unary     go to state 45
    factor    go to state 46


State 85

   51 factor: '(' bool ')' .

    $default  reduce using rule 51 (factor)


State 86

   26 bool1: "||" join . bool1

    "||"  shift, and go to state 62

    $default  reduce using rule 27 (bool1)

    bool1  go to state 104


State 87

   29 join1: "&&" equality . join1

    "&&"  shift, and go to state 64

    $default  reduce using rule 30 (join1)

    join1  go to state 105


State 88

   32 equality1: "==" rel . equality1

    "=="  shift, and go to state 66
    "!="  shift, and go to state 67

    $default  reduce using rule 34 (equality1)

    equality1  go to state 106


State 89

   33 equality1: "!=" rel . equality1

    "=="  shift, and go to state 66
    "!="  shift, and go to state 67

    $default  reduce using rule 34 (equality1)

    equality1  go to state 107


State 90

   36 rel: expr "<=" expr .

    $default  reduce using rule 36 (rel)


State 91

   37 rel: expr ">=" expr .

    $default  reduce using rule 37 (rel)


State 92

   35 rel: expr '<' expr .

    $default  reduce using rule 35 (rel)


State 93

   38 rel: expr '>' expr .

    $default  reduce using rule 38 (rel)


State 94

   41 expr1: '+' term . expr1

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74

    $default  reduce using rule 43 (expr1)

    expr1  go to state 108


State 95

   42 expr1: '-' term . expr1

    '+'  shift, and go to state 73
    '-'  shift, and go to state 74

    $default  reduce using rule 43 (expr1)

    expr1  go to state 109


State 96

   45 term1: '*' unary . term1

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    $default  reduce using rule 47 (term1)

    term1  go to state 110


State 97

   46 term1: '/' unary . term1

    '*'  shift, and go to state 76
    '/'  shift, and go to state 77

    $default  reduce using rule 47 (term1)

    term1  go to state 111


State 98

   23 loc1: '[' bool ']' . loc1

    '['  shift, and go to state 47

    $default  reduce using rule 24 (loc1)

    loc1  go to state 112


State 99

   13 stmt: loc "==" bool ';' .

    $default  reduce using rule 13 (stmt)


State 100

    7 type1: '[' TOK_NUM ']' type1 .

    $default  reduce using rule 7 (type1)


State 101

   16 stmt: "while" '(' bool ')' stmt .

    $default  reduce using rule 16 (stmt)


State 102

   14 stmt: "if" '(' bool ')' stmt .
   15     | "if" '(' bool ')' stmt . "else" stmt

    "else"  shift, and go to state 113

    "else"    [reduce using rule 14 (stmt)]
    $default  reduce using rule 14 (stmt)


State 103

   17 stmt: "do" stmt "while" '(' bool . ')' ';'

    ')'  shift, and go to state 114


State 104

   26 bool1: "||" join bool1 .

    $default  reduce using rule 26 (bool1)


State 105

   29 join1: "&&" equality join1 .

    $default  reduce using rule 29 (join1)


State 106

   32 equality1: "==" rel equality1 .

    $default  reduce using rule 32 (equality1)


State 107

   33 equality1: "!=" rel equality1 .

    $default  reduce using rule 33 (equality1)


State 108

   41 expr1: '+' term expr1 .

    $default  reduce using rule 41 (expr1)


State 109

   42 expr1: '-' term expr1 .

    $default  reduce using rule 42 (expr1)


State 110

   45 term1: '*' unary term1 .

    $default  reduce using rule 45 (term1)


State 111

   46 term1: '/' unary term1 .

    $default  reduce using rule 46 (term1)


State 112

   23 loc1: '[' bool ']' loc1 .

    $default  reduce using rule 23 (loc1)


State 113

   15 stmt: "if" '(' bool ')' stmt "else" . stmt

    "break"  shift, and go to state 11
    "while"  shift, and go to state 12
    "if"     shift, and go to state 13
    "do"     shift, and go to state 14
    "read"   shift, and go to state 15
    "write"  shift, and go to state 16
    TOK_ID   shift, and go to state 17
    '{'      shift, and go to state 1

    block  go to state 18
    stmt   go to state 115
    loc    go to state 21


State 114

   17 stmt: "do" stmt "while" '(' bool ')' . ';'

    ';'  shift, and go to state 116


State 115

   15 stmt: "if" '(' bool ')' stmt "else" stmt .

    $default  reduce using rule 15 (stmt)


State 116

   17 stmt: "do" stmt "while" '(' bool ')' ';' .

    $default  reduce using rule 17 (stmt)
